{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\checklist\\\\src\\\\components\\\\Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport CalendarPresent from \"./CalendarPresent\";\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calendar() {\n  _s();\n  const now = new Date();\n  const [year, setYear] = useState(now.getFullYear());\n  const [month, setMonth] = useState(now.getMonth());\n  const [date, setDate] = useState(now.getDate());\n  const [day, setDay] = useState(now.getDay());\n  const lastDate = new Date(year, month + 1, 0);\n  const lastDay = lastDate.getDate();\n  //const [cellsAmount, setCellsAmount] = useState(day + lastDay);\n  const refCellsAmount = useRef(day + lastDay);\n  const [cellsArr, setCellsArr] = useState([]);\n\n  //cellsAmount % 7 !== 0 && setCellsAmount(cellsAmount + 1);\n  refCellsAmount.current % 7 !== 0 && refCellsAmount.current + 1;\n  const copy = [...cellsArr];\n  for (let i = refCellsAmount.current; i >= 1; i--) {\n    copy.push({\n      id: nanoid(),\n      value: '',\n      hasTasks: false,\n      allTasksDone: false\n    });\n  }\n  console.log(copy);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CalendarPresent, {\n      year: year,\n      month: month,\n      lastDay: lastDay,\n      day: day\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n}\n_s(Calendar, \"daUArbCGHVnzSnmb3VsblQeyYgw=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useRef","CalendarPresent","nanoid","jsxDEV","_jsxDEV","Calendar","_s","now","Date","year","setYear","getFullYear","month","setMonth","getMonth","date","setDate","getDate","day","setDay","getDay","lastDate","lastDay","refCellsAmount","cellsArr","setCellsArr","current","copy","i","push","id","value","hasTasks","allTasksDone","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/projects/checklist/src/components/Calendar.js"],"sourcesContent":["import React, {useState, useRef} from \"react\";\r\nimport CalendarPresent from \"./CalendarPresent\";\r\nimport {nanoid} from 'nanoid';\r\n\r\nfunction Calendar() {\r\n    const now = new Date();\r\n    const [year, setYear] = useState(now.getFullYear());\r\n    const [month, setMonth] = useState(now.getMonth());\r\n    const [date, setDate] = useState(now.getDate());\r\n    const [day, setDay] = useState(now.getDay());\r\n    const lastDate = new Date(year, month + 1, 0);\r\n    const lastDay = lastDate.getDate();\r\n    //const [cellsAmount, setCellsAmount] = useState(day + lastDay);\r\n    const refCellsAmount = useRef(day + lastDay);\r\n    const [cellsArr, setCellsArr] = useState([]);\r\n\r\n    //cellsAmount % 7 !== 0 && setCellsAmount(cellsAmount + 1);\r\n    refCellsAmount.current % 7 !== 0 && refCellsAmount.current + 1;\r\n   \r\n   \r\n    const copy = [...cellsArr];\r\n    for(let i = refCellsAmount.current; i >= 1; i--) {\r\n        copy.push({\r\n            id: nanoid(),\r\n            value: '',\r\n            hasTasks: false,\r\n            allTasksDone: false,\r\n        })\r\n    }\r\n    console.log(copy);\r\n    \r\n\r\n\r\n    return <div>\r\n        <CalendarPresent year = {year} month = {month} lastDay = {lastDay} day = {day} />\r\n        \r\n    </div>\r\n\r\n}\r\n\r\nexport default Calendar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,MAAM,QAAO,OAAO;AAC7C,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAAQC,MAAM,QAAO,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAACQ,GAAG,CAACI,WAAW,CAAC,CAAC,CAAC;EACnD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAACQ,GAAG,CAACO,QAAQ,CAAC,CAAC,CAAC;EAClD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAACQ,GAAG,CAACU,OAAO,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGpB,QAAQ,CAACQ,GAAG,CAACa,MAAM,CAAC,CAAC,CAAC;EAC5C,MAAMC,QAAQ,GAAG,IAAIb,IAAI,CAACC,IAAI,EAAEG,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC;EAC7C,MAAMU,OAAO,GAAGD,QAAQ,CAACJ,OAAO,CAAC,CAAC;EAClC;EACA,MAAMM,cAAc,GAAGvB,MAAM,CAACkB,GAAG,GAAGI,OAAO,CAAC;EAC5C,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACAwB,cAAc,CAACG,OAAO,GAAG,CAAC,KAAK,CAAC,IAAIH,cAAc,CAACG,OAAO,GAAG,CAAC;EAG9D,MAAMC,IAAI,GAAG,CAAC,GAAGH,QAAQ,CAAC;EAC1B,KAAI,IAAII,CAAC,GAAGL,cAAc,CAACG,OAAO,EAAEE,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC7CD,IAAI,CAACE,IAAI,CAAC;MACNC,EAAE,EAAE5B,MAAM,CAAC,CAAC;MACZ6B,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,KAAK;MACfC,YAAY,EAAE;IAClB,CAAC,CAAC;EACN;EACAC,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;EAIjB,oBAAOvB,OAAA;IAAAgC,QAAA,eACHhC,OAAA,CAACH,eAAe;MAACQ,IAAI,EAAIA,IAAK;MAACG,KAAK,EAAIA,KAAM;MAACU,OAAO,EAAIA,OAAQ;MAACJ,GAAG,EAAIA;IAAI;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEhF,CAAC;AAEV;AAAClC,EAAA,CAlCQD,QAAQ;AAAAoC,EAAA,GAARpC,QAAQ;AAoCjB,eAAeA,QAAQ;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}