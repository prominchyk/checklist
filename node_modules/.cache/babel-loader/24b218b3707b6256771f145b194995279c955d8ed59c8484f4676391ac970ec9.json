{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\checklist\\\\src\\\\components\\\\Calendar.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useContext } from \"react\";\nimport CalendarPresent from \"./CalendarPresent\";\nimport { MyContext } from '../MyContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calendar() {\n  _s2();\n  var _s = $RefreshSig$();\n  const now = useRef(new Date());\n  const year = useRef(now.current.getFullYear());\n  const month = useRef(now.current.getMonth());\n  const date = useRef(now.current.getDate());\n  _s(useEffect(_s(() => {\n    _s();\n    document.body.style.backgroundImage = useContext(MyContext)[month][2];\n  }, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\")), \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n  const lastDate = useRef(new Date(year.current, month.current + 1, 0));\n  const lastDay = useRef(lastDate.current.getDate());\n  const firstDate = useRef(new Date(year.current, month.current, 1));\n  const firstDayOfWeek = useRef();\n  const refCellsAmount = useRef();\n  if (firstDayOfWeek.current === 0) {\n    firstDayOfWeek.current = firstDate.current.getDay() + 7;\n    refCellsAmount.current = firstDayOfWeek.current + 7 + lastDay.current - 1;\n  } else {\n    firstDayOfWeek.current = firstDate.current.getDay();\n    refCellsAmount.current = firstDayOfWeek.current + lastDay.current - 1;\n  }\n  const refCounterCells = useRef(1);\n  const refCounterDays = useRef(1);\n  function createCellsArr() {\n    while (refCellsAmount.current % 7 !== 0) {\n      refCellsAmount.current = refCellsAmount.current + 1;\n    }\n    const firstCellsArr = [];\n    for (let i = refCellsAmount.current; i >= 1; i--) {\n      firstCellsArr.push({\n        id: year.current.toString() + (month.current + 1) + date.current + refCounterCells.current,\n        value: refCounterCells.current >= firstDayOfWeek.current && refCounterCells.current < lastDay.current + firstDayOfWeek.current ? refCounterDays.current : null,\n        hasTasks: false,\n        allTasksDone: false,\n        isActive: false,\n        isToday: false\n      });\n      if (refCounterCells.current >= firstDayOfWeek.current && refCounterCells.current < lastDay.current + firstDayOfWeek.current) {\n        refCounterDays.current = refCounterDays.current + 1;\n      }\n      refCounterCells.current = refCounterCells.current + 1;\n    }\n    refCounterCells.current = 1;\n    refCounterDays.current = 1;\n    for (let elem of firstCellsArr) {\n      elem.value === date.current ? elem.isToday = true : elem.isToday = false;\n    }\n    return firstCellsArr;\n  }\n  const [cellsArr, setCellsArr] = useState(createCellsArr());\n  function handleClickForward() {\n    now.current = new Date(year.current, month.current + 1, date.current);\n    year.current = now.current.getFullYear();\n    month.current = now.current.getMonth();\n    date.current = now.current.getDate();\n    lastDate.current = new Date(year.current, month.current + 1, 0);\n    firstDate.current = new Date(year.current, month.current, 1);\n    lastDay.current = lastDate.current.getDate();\n    firstDayOfWeek.current = firstDate.current.getDay();\n    if (firstDayOfWeek.current === 0) {\n      console.log('!!!');\n      firstDayOfWeek.current = firstDate.current.getDay() + 7;\n      refCellsAmount.current = firstDayOfWeek.current + 7 + lastDay.current - 1;\n    } else {\n      firstDayOfWeek.current = firstDate.current.getDay();\n      refCellsAmount.current = firstDayOfWeek.current + lastDay.current - 1;\n    }\n    setCellsArr(createCellsArr());\n  }\n  function handleClickBack() {\n    now.current = new Date(year.current, month.current - 1, date.current);\n    year.current = now.current.getFullYear();\n    month.current = now.current.getMonth();\n    date.current = now.current.getDate();\n    lastDate.current = new Date(year.current, month.current + 1, 0);\n    firstDate.current = new Date(year.current, month.current, 1);\n    lastDay.current = lastDate.current.getDate();\n    firstDayOfWeek.current = firstDate.current.getDay();\n    if (firstDayOfWeek.current === 0) {\n      firstDayOfWeek.current = firstDate.current.getDay() + 7;\n      refCellsAmount.current = firstDayOfWeek.current + 7 + lastDay.current - 1;\n    } else {\n      firstDayOfWeek.current = firstDate.current.getDay();\n      refCellsAmount.current = firstDayOfWeek.current + lastDay.current - 1;\n    }\n    setCellsArr(createCellsArr());\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CalendarPresent, {\n      year: year.current,\n      month: month.current,\n      cellsArr: cellsArr,\n      handleClickForward: handleClickForward,\n      handleClickBack: handleClickBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 12\n  }, this);\n}\n_s2(Calendar, \"iWSWOLkxfMODIiBAQX2H7yoqN5w=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useContext","CalendarPresent","MyContext","jsxDEV","_jsxDEV","Calendar","_s2","_s","$RefreshSig$","now","Date","year","current","getFullYear","month","getMonth","date","getDate","document","body","style","backgroundImage","lastDate","lastDay","firstDate","firstDayOfWeek","refCellsAmount","getDay","refCounterCells","refCounterDays","createCellsArr","firstCellsArr","i","push","id","toString","value","hasTasks","allTasksDone","isActive","isToday","elem","cellsArr","setCellsArr","handleClickForward","console","log","handleClickBack","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/projects/checklist/src/components/Calendar.js"],"sourcesContent":["import React, {useState, useRef, useEffect, useContext} from \"react\";\r\nimport CalendarPresent from \"./CalendarPresent\";\r\nimport {MyContext} from '../MyContext.js';\r\n\r\nfunction Calendar() {\r\n    const now = useRef(new Date());\r\n    const year = useRef(now.current.getFullYear());\r\n    const month = useRef(now.current.getMonth());\r\n    const date = useRef(now.current.getDate());\r\n\r\n    useEffect (() => {\r\n        document.body.style.backgroundImage = useContext(MyContext)[month][2];\r\n    })\r\n\r\n    const lastDate = useRef(new Date(year.current, month.current + 1, 0));\r\n    const lastDay = useRef(lastDate.current.getDate());\r\n    const firstDate = useRef(new Date(year.current, month.current, 1));\r\n    const firstDayOfWeek = useRef();\r\n    const refCellsAmount = useRef();\r\n    if(firstDayOfWeek.current === 0) {\r\n        firstDayOfWeek.current = firstDate.current.getDay() + 7;\r\n        refCellsAmount.current = firstDayOfWeek.current + 7 + lastDay.current - 1;\r\n    } else {\r\n        firstDayOfWeek.current = firstDate.current.getDay();\r\n        refCellsAmount.current = firstDayOfWeek.current + lastDay.current - 1;\r\n    }\r\n    const refCounterCells = useRef(1);\r\n    const refCounterDays = useRef(1);\r\n\r\n    function createCellsArr() {\r\n\r\n        while (refCellsAmount.current % 7 !== 0) {\r\n            refCellsAmount.current = refCellsAmount.current + 1;\r\n        }\r\n\r\n        const firstCellsArr = [];\r\n        for(let i = refCellsAmount.current; i >= 1; i--) {\r\n            firstCellsArr.push({\r\n            id: year.current.toString() + (month.current + 1) + date.current + refCounterCells.current,\r\n            value: refCounterCells.current >= firstDayOfWeek.current && refCounterCells.current < lastDay.current + firstDayOfWeek.current ? refCounterDays.current : null,\r\n            hasTasks: false,\r\n            allTasksDone: false,\r\n            isActive: false,\r\n                isToday: false,\r\n            })\r\n            if(refCounterCells.current >= firstDayOfWeek.current && refCounterCells.current < lastDay.current + firstDayOfWeek.current) {\r\n                refCounterDays.current = refCounterDays.current + 1;\r\n            }\r\n            refCounterCells.current = refCounterCells.current + 1;\r\n        }\r\n        refCounterCells.current = 1;\r\n        refCounterDays.current = 1;\r\n\r\n        for(let elem of firstCellsArr) {\r\n            elem.value === date.current ? elem.isToday = true : elem.isToday = false;\r\n        } \r\n        return firstCellsArr;\r\n        \r\n        }\r\n\r\n    const [cellsArr, setCellsArr] = useState(createCellsArr());\r\n\r\n\r\n    function handleClickForward() {\r\n        now.current = (new Date (year.current, month.current + 1, date.current));\r\n        year.current = now.current.getFullYear();\r\n        month.current = now.current.getMonth();\r\n        date.current = now.current.getDate();\r\n        lastDate.current = (new Date(year.current, month.current + 1, 0));\r\n        firstDate.current = (new Date(year.current, month.current, 1));\r\n        lastDay.current = lastDate.current.getDate();\r\n        firstDayOfWeek.current = firstDate.current.getDay();\r\n        if(firstDayOfWeek.current === 0) {\r\n            console.log('!!!');\r\n            firstDayOfWeek.current = firstDate.current.getDay() + 7;\r\n            refCellsAmount.current = firstDayOfWeek.current + 7 + lastDay.current - 1;\r\n        } else {\r\n            firstDayOfWeek.current = firstDate.current.getDay();\r\n            refCellsAmount.current = firstDayOfWeek.current + lastDay.current - 1;\r\n        }\r\n        setCellsArr(createCellsArr());\r\n    }\r\n\r\n    function handleClickBack() {\r\n        now.current = (new Date (year.current, month.current - 1, date.current));\r\n        year.current = now.current.getFullYear();\r\n        month.current = now.current.getMonth();\r\n        date.current = now.current.getDate();\r\n        lastDate.current = (new Date(year.current, month.current + 1, 0));\r\n        firstDate.current = (new Date(year.current, month.current, 1));\r\n        lastDay.current = lastDate.current.getDate();\r\n        firstDayOfWeek.current = firstDate.current.getDay();\r\n        if(firstDayOfWeek.current === 0) {\r\n            firstDayOfWeek.current = firstDate.current.getDay() + 7;\r\n            refCellsAmount.current = firstDayOfWeek.current + 7 + lastDay.current - 1;\r\n        } else {\r\n            firstDayOfWeek.current = firstDate.current.getDay();\r\n            refCellsAmount.current = firstDayOfWeek.current + lastDay.current - 1;\r\n        }\r\n        setCellsArr(createCellsArr());\r\n    }\r\n\r\n    return <div>\r\n        <CalendarPresent year = {year.current} month = {month.current} cellsArr = {cellsArr} handleClickForward = {handleClickForward} handleClickBack = {handleClickBack} />\r\n    </div>\r\n\r\n}\r\n\r\nexport default Calendar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}