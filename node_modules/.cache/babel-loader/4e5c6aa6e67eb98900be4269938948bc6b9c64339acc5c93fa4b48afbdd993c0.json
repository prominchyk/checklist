{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\checklist\\\\src\\\\components\\\\Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport CalendarPresent from \"./CalendarPresent\";\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calendar() {\n  _s();\n  const now = new Date();\n  const [year, setYear] = useState(now.getFullYear());\n  const [month, setMonth] = useState(now.getMonth());\n  const [date, setDate] = useState(now.getDate());\n  const [day, setDay] = useState(now.getDay());\n  const [cellsAmount, setCellsAmount] = useState(null);\n  const [cellsArr, setCellsArr] = useState([]);\n  const lastDate = new Date(year, month + 1, 0);\n  const lastDay = lastDate.getDate();\n  function createCellsArr() {\n    const copy = [...cellsArr];\n    while (cellsAmount > 0) {\n      copy.push({\n        id: nanoid(),\n        value: '',\n        hasTasks: false,\n        tasksDone: false\n      });\n      setCellsAmount(cellsAmount - 1);\n    }\n    setCellsArr(copy);\n    console.log(cellsArr);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CalendarPresent, {\n      year: year,\n      month: month,\n      lastDay: lastDay,\n      createCellsArr: createCellsArr,\n      day: day\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n}\n_s(Calendar, \"e9HAnNf6fDM+qfczWir9fIeqpOQ=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","CalendarPresent","nanoid","jsxDEV","_jsxDEV","Calendar","_s","now","Date","year","setYear","getFullYear","month","setMonth","getMonth","date","setDate","getDate","day","setDay","getDay","cellsAmount","setCellsAmount","cellsArr","setCellsArr","lastDate","lastDay","createCellsArr","copy","push","id","value","hasTasks","tasksDone","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/projects/checklist/src/components/Calendar.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport CalendarPresent from \"./CalendarPresent\";\r\nimport {nanoid} from 'nanoid';\r\n\r\nfunction Calendar() {\r\n    const now = new Date();\r\n    const [year, setYear] = useState(now.getFullYear());\r\n    const [month, setMonth] = useState(now.getMonth());\r\n    const [date, setDate] = useState(now.getDate());\r\n    const [day, setDay] = useState(now.getDay());\r\n    const [cellsAmount, setCellsAmount] = useState(null);\r\n    const [cellsArr, setCellsArr] = useState([]);\r\n    const lastDate = new Date(year, month + 1, 0);\r\n    const lastDay = lastDate.getDate();\r\n    \r\n\r\n    function createCellsArr() {\r\n        const copy = [...cellsArr];\r\n        while (cellsAmount > 0) {\r\n            copy.push({\r\n                id: nanoid(),\r\n                value: '',\r\n                hasTasks: false, \r\n                tasksDone: false,\r\n            })\r\n            setCellsAmount(cellsAmount - 1);\r\n        }\r\n        setCellsArr(copy);\r\n        console.log(cellsArr);\r\n    }\r\n\r\n\r\n\r\n    return <div>\r\n        <CalendarPresent year = {year} month = {month} lastDay = {lastDay} createCellsArr={createCellsArr} day = {day} />\r\n    </div>\r\n\r\n}\r\n\r\nexport default Calendar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAAQC,MAAM,QAAO,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAACO,GAAG,CAACI,WAAW,CAAC,CAAC,CAAC;EACnD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAACO,GAAG,CAACO,QAAQ,CAAC,CAAC,CAAC;EAClD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAACO,GAAG,CAACU,OAAO,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGnB,QAAQ,CAACO,GAAG,CAACa,MAAM,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMyB,QAAQ,GAAG,IAAIjB,IAAI,CAACC,IAAI,EAAEG,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC;EAC7C,MAAMc,OAAO,GAAGD,QAAQ,CAACR,OAAO,CAAC,CAAC;EAGlC,SAASU,cAAcA,CAAA,EAAG;IACtB,MAAMC,IAAI,GAAG,CAAC,GAAGL,QAAQ,CAAC;IAC1B,OAAOF,WAAW,GAAG,CAAC,EAAE;MACpBO,IAAI,CAACC,IAAI,CAAC;QACNC,EAAE,EAAE5B,MAAM,CAAC,CAAC;QACZ6B,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,KAAK;QACfC,SAAS,EAAE;MACf,CAAC,CAAC;MACFX,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IACnC;IACAG,WAAW,CAACI,IAAI,CAAC;IACjBM,OAAO,CAACC,GAAG,CAACZ,QAAQ,CAAC;EACzB;EAIA,oBAAOnB,OAAA;IAAAgC,QAAA,eACHhC,OAAA,CAACH,eAAe;MAACQ,IAAI,EAAIA,IAAK;MAACG,KAAK,EAAIA,KAAM;MAACc,OAAO,EAAIA,OAAQ;MAACC,cAAc,EAAEA,cAAe;MAACT,GAAG,EAAIA;IAAI;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChH,CAAC;AAEV;AAAClC,EAAA,CAjCQD,QAAQ;AAAAoC,EAAA,GAARpC,QAAQ;AAmCjB,eAAeA,QAAQ;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}