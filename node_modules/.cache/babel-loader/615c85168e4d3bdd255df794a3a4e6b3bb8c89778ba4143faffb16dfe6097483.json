{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\checklist\\\\src\\\\components\\\\Checklist.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ChecklistPresent from \"./ChecklistPresent\";\nimport styles from './ChecklistPresent.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Checklist({\n  month,\n  year,\n  eventId,\n  eventText,\n  visability,\n  handleClickSaveButton\n}) {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [arrValues, setArrValues] = useState([]);\n  const [counerValues, setCounterValues] = useState(-1);\n  function handlerInputChange(event) {\n    setInputValue(event.target.value);\n  }\n  function createArrValues() {\n    const copy = [...arrValues];\n    copy.push(inputValue);\n    setArrValues(copy);\n    setInputValue('');\n    setCounterValues(counerValues + 1);\n    console.log(arrValues);\n  }\n  function handleClickDoneButton(event) {\n    console.log(event.target.parentNode);\n  }\n  function CreateLi() {\n    const res = arrValues.map((elem, index) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: elem\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.styleLiButtons,\n          children: \"\\u0420\\u0435\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.styleLiButtons,\n          children: \"\\u0425\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClickDoneButton,\n          className: styles.styleLiButtons,\n          children: \"V\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    });\n    return res;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ChecklistPresent, {\n      month: month,\n      year: year,\n      eventId: eventId,\n      eventText: eventText,\n      inputValue: inputValue,\n      handlerInputChange: handlerInputChange,\n      createArrValues: createArrValues,\n      CreateLi: CreateLi,\n      visability: visability,\n      handleClickSaveButton: handleClickSaveButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, this);\n}\n_s(Checklist, \"OS/mZQaVIh/aHRwg4IgN9LKXiwI=\");\n_c = Checklist;\nexport default Checklist;\nvar _c;\n$RefreshReg$(_c, \"Checklist\");","map":{"version":3,"names":["React","useState","ChecklistPresent","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Checklist","month","year","eventId","eventText","visability","handleClickSaveButton","_s","inputValue","setInputValue","arrValues","setArrValues","counerValues","setCounterValues","handlerInputChange","event","target","value","createArrValues","copy","push","console","log","handleClickDoneButton","parentNode","CreateLi","res","map","elem","index","children","fileName","_jsxFileName","lineNumber","columnNumber","className","styleLiButtons","onClick","_c","$RefreshReg$"],"sources":["C:/projects/checklist/src/components/Checklist.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport ChecklistPresent from \"./ChecklistPresent\";\r\nimport styles from './ChecklistPresent.module.css';\r\n\r\nfunction Checklist({month, year, eventId, eventText, visability, handleClickSaveButton}) {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [arrValues, setArrValues] = useState([]);\r\n    const [counerValues, setCounterValues] = useState(-1);\r\n\r\n    function handlerInputChange(event) {\r\n        setInputValue(event.target.value);\r\n    }\r\n\r\n    function createArrValues() {\r\n        const copy = [...arrValues];\r\n        copy.push(inputValue);\r\n        setArrValues(copy);\r\n        setInputValue('');\r\n        setCounterValues(counerValues + 1);\r\n        console.log(arrValues);\r\n    }\r\n\r\n    function handleClickDoneButton(event) {\r\n        console.log(event.target.parentNode);\r\n    }\r\n\r\n    function CreateLi() {\r\n        const res = arrValues.map((elem, index) => {\r\n            return <>\r\n            <li key={index}>{elem}</li>\r\n            <button className={styles.styleLiButtons}>Ред</button>\r\n            <button className={styles.styleLiButtons}>Х</button>\r\n            <button onClick={handleClickDoneButton} className={styles.styleLiButtons}>V</button>\r\n            <br />\r\n            </>\r\n        })\r\n        return res;\r\n    }\r\n\r\n    return <div>\r\n       <ChecklistPresent month={month} year={year} eventId={eventId} eventText={eventText} inputValue={inputValue} handlerInputChange={handlerInputChange} createArrValues={createArrValues} CreateLi={CreateLi} visability={visability} handleClickSaveButton={handleClickSaveButton} /> \r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default Checklist;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}