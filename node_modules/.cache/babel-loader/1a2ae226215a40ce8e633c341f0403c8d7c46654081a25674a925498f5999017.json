{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\checklist\\\\src\\\\components\\\\Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport CalendarPresent from \"./CalendarPresent\";\nimport Checklist from './Checklist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calendar({\n  changeBackgroundImage,\n  monthObj\n}) {\n  _s();\n  const now = useRef(new Date());\n  const year = useRef(now.current.getFullYear());\n  const month = useRef(now.current.getMonth());\n  const date = useRef(now.current.getDate());\n  const lastDate = useRef(new Date(year.current, month.current + 1, 0));\n  const lastDay = useRef(lastDate.current.getDate());\n  const firstDate = useRef(new Date(year.current, month.current, 1));\n  const firstDayOfWeek = useRef();\n  const refCellsAmount = useRef();\n  if (firstDayOfWeek.current === 0) {\n    firstDayOfWeek.current = firstDate.current.getDay() + 7;\n    refCellsAmount.current = firstDayOfWeek.current + 7 + lastDay.current - 1;\n  } else {\n    firstDayOfWeek.current = firstDate.current.getDay();\n    refCellsAmount.current = firstDayOfWeek.current + lastDay.current - 1;\n  }\n  const refCounterCells = useRef(1);\n  const refCounterDays = useRef(1);\n  function createCellsArr() {\n    while (refCellsAmount.current % 7 !== 0) {\n      refCellsAmount.current = refCellsAmount.current + 1;\n    }\n    const firstCellsArr = [];\n    for (let i = refCellsAmount.current; i >= 1; i--) {\n      firstCellsArr.push({\n        id: year.current.toString() + (month.current + 1) + refCounterCells.current,\n        value: refCounterCells.current >= firstDayOfWeek.current && refCounterCells.current < lastDay.current + firstDayOfWeek.current ? refCounterDays.current : null,\n        hasTasks: false,\n        //allTasksDone: false,\n        //isActive: false,\n        isToday: false\n      });\n      if (refCounterCells.current >= firstDayOfWeek.current && refCounterCells.current < lastDay.current + firstDayOfWeek.current) {\n        refCounterDays.current = refCounterDays.current + 1;\n      }\n      refCounterCells.current = refCounterCells.current + 1;\n    }\n    refCounterCells.current = 1;\n    refCounterDays.current = 1;\n    for (let elem of firstCellsArr) {\n      elem.value === date.current ? elem.isToday = true : elem.isToday = false;\n    }\n    return firstCellsArr;\n  }\n  const [cellsArr, setCellsArr] = useState(createCellsArr());\n  function handleClickForward() {\n    now.current = new Date(year.current, month.current + 1, date.current);\n    year.current = now.current.getFullYear();\n    month.current = now.current.getMonth();\n    date.current = now.current.getDate();\n    lastDate.current = new Date(year.current, month.current + 1, 0);\n    firstDate.current = new Date(year.current, month.current, 1);\n    lastDay.current = lastDate.current.getDate();\n    firstDayOfWeek.current = firstDate.current.getDay();\n    if (firstDayOfWeek.current === 0) {\n      //console.log('!!!');\n      firstDayOfWeek.current = firstDate.current.getDay() + 7;\n      refCellsAmount.current = firstDayOfWeek.current + 7 + lastDay.current - 1;\n    } else {\n      firstDayOfWeek.current = firstDate.current.getDay();\n      refCellsAmount.current = firstDayOfWeek.current + lastDay.current - 1;\n    }\n    changeBackgroundImage(month.current);\n    setCellsArr(createCellsArr());\n  }\n  function handleClickBack() {\n    now.current = new Date(year.current, month.current - 1, date.current);\n    year.current = now.current.getFullYear();\n    month.current = now.current.getMonth();\n    date.current = now.current.getDate();\n    lastDate.current = new Date(year.current, month.current + 1, 0);\n    firstDate.current = new Date(year.current, month.current, 1);\n    lastDay.current = lastDate.current.getDate();\n    firstDayOfWeek.current = firstDate.current.getDay();\n    if (firstDayOfWeek.current === 0) {\n      firstDayOfWeek.current = firstDate.current.getDay() + 7;\n      refCellsAmount.current = firstDayOfWeek.current + 7 + lastDay.current - 1;\n    } else {\n      firstDayOfWeek.current = firstDate.current.getDay();\n      refCellsAmount.current = firstDayOfWeek.current + lastDay.current - 1;\n    }\n    changeBackgroundImage(month.current);\n    setCellsArr(createCellsArr());\n  }\n  const [eventId, setEventId] = useState('');\n  const [eventText, setEventText] = useState('');\n  const [visability, setVisability] = useState(false);\n  const [arrValues, setArrValues] = useState([]);\n  function createArrValues() {\n    const copy = [...arrValues];\n    copy.push(inputValue);\n    setArrValues(copy);\n    setInputValue('');\n    // setCounterValues(counterValues + 1);\n    console.log(arrValues);\n  }\n  function handleClickCell(event) {\n    setEventId(event.target.id);\n    setEventText(event.target.textContent);\n    if (event.target.textContent !== '') {\n      setVisability(true);\n    }\n    if (localStorage.getItem(eventId) === true) {\n      const copy = [...arrValues];\n      const savedArr = JSON.parse(localStorage.getItem(eventId));\n      for (let elem of savedArr) {\n        copy.push(elem);\n      }\n      setArrValues(copy);\n    }\n    console.log(localStorage.getItem(eventId));\n  }\n  function handleClickSaveButton() {\n    setVisability(false);\n    if (arrValues.length >= 1) {\n      localStorage.setItem(eventId, JSON.stringify(arrValues));\n    }\n    const copyCellsArr = [...cellsArr];\n    for (let elem of copyCellsArr) {\n      if (elem.id === eventId) {\n        elem.hasTasks = true;\n        console.log(elem);\n      }\n    }\n    setCellsArr(copyCellsArr);\n    const copyArrValues = [...arrValues];\n    copyArrValues.length = 0;\n    setArrValues(copyArrValues);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CalendarPresent, {\n      year: year.current,\n      month: month.current,\n      cellsArr: cellsArr,\n      handleClickForward: handleClickForward,\n      handleClickBack: handleClickBack,\n      monthObj: monthObj,\n      handleClickCell: handleClickCell\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Checklist, {\n      month: month.current + 1,\n      year: year.current,\n      eventId: eventId,\n      eventText: eventText,\n      visability: visability,\n      arrValues: arrValues,\n      setArrValues: setArrValues,\n      handleClickSaveButton: handleClickSaveButton,\n      createArrValues: createArrValues\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 12\n  }, this);\n}\n_s(Calendar, \"11f04qnyNfXjfQCV3Se2a+6kA+A=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useRef","CalendarPresent","Checklist","jsxDEV","_jsxDEV","Calendar","changeBackgroundImage","monthObj","_s","now","Date","year","current","getFullYear","month","getMonth","date","getDate","lastDate","lastDay","firstDate","firstDayOfWeek","refCellsAmount","getDay","refCounterCells","refCounterDays","createCellsArr","firstCellsArr","i","push","id","toString","value","hasTasks","isToday","elem","cellsArr","setCellsArr","handleClickForward","handleClickBack","eventId","setEventId","eventText","setEventText","visability","setVisability","arrValues","setArrValues","createArrValues","copy","inputValue","setInputValue","console","log","handleClickCell","event","target","textContent","localStorage","getItem","savedArr","JSON","parse","handleClickSaveButton","length","setItem","stringify","copyCellsArr","copyArrValues","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/projects/checklist/src/components/Calendar.js"],"sourcesContent":["import React, {useState, useRef} from \"react\";\r\nimport CalendarPresent from \"./CalendarPresent\";\r\nimport Checklist from './Checklist';\r\n\r\n\r\nfunction Calendar({changeBackgroundImage, monthObj}) {\r\n    const now = useRef(new Date());\r\n    const year = useRef(now.current.getFullYear());\r\n    const month = useRef(now.current.getMonth());\r\n    const date = useRef(now.current.getDate());\r\n\r\n    const lastDate = useRef(new Date(year.current, month.current + 1, 0));\r\n    const lastDay = useRef(lastDate.current.getDate());\r\n    const firstDate = useRef(new Date(year.current, month.current, 1));\r\n    const firstDayOfWeek = useRef();\r\n    const refCellsAmount = useRef();\r\n    if(firstDayOfWeek.current === 0) {\r\n        firstDayOfWeek.current = firstDate.current.getDay() + 7;\r\n        refCellsAmount.current = firstDayOfWeek.current + 7 + lastDay.current - 1;\r\n    } else {\r\n        firstDayOfWeek.current = firstDate.current.getDay();\r\n        refCellsAmount.current = firstDayOfWeek.current + lastDay.current - 1;\r\n    }\r\n    const refCounterCells = useRef(1);\r\n    const refCounterDays = useRef(1);\r\n\r\n    function createCellsArr() {\r\n\r\n        while (refCellsAmount.current % 7 !== 0) {\r\n            refCellsAmount.current = refCellsAmount.current + 1;\r\n        }\r\n\r\n        const firstCellsArr = [];\r\n        for(let i = refCellsAmount.current; i >= 1; i--) {\r\n            firstCellsArr.push({\r\n            id: year.current.toString() + (month.current + 1) + refCounterCells.current,\r\n            value: refCounterCells.current >= firstDayOfWeek.current && refCounterCells.current < lastDay.current + firstDayOfWeek.current ? refCounterDays.current : null,\r\n            hasTasks: false,\r\n            //allTasksDone: false,\r\n            //isActive: false,\r\n            isToday: false,\r\n            })\r\n            if(refCounterCells.current >= firstDayOfWeek.current && refCounterCells.current < lastDay.current + firstDayOfWeek.current) {\r\n                refCounterDays.current = refCounterDays.current + 1;\r\n            }\r\n            refCounterCells.current = refCounterCells.current + 1;\r\n        }\r\n        refCounterCells.current = 1;\r\n        refCounterDays.current = 1;\r\n\r\n        for(let elem of firstCellsArr) {\r\n            elem.value === date.current ? elem.isToday = true : elem.isToday = false;\r\n        } \r\n        return firstCellsArr;\r\n        \r\n        }\r\n\r\n    const [cellsArr, setCellsArr] = useState(createCellsArr());\r\n\r\n\r\n    function handleClickForward() {\r\n        now.current = (new Date (year.current, month.current + 1, date.current));\r\n        year.current = now.current.getFullYear();\r\n        month.current = now.current.getMonth();\r\n        date.current = now.current.getDate();\r\n        lastDate.current = (new Date(year.current, month.current + 1, 0));\r\n        firstDate.current = (new Date(year.current, month.current, 1));\r\n        lastDay.current = lastDate.current.getDate();\r\n        firstDayOfWeek.current = firstDate.current.getDay();\r\n        if(firstDayOfWeek.current === 0) {\r\n            //console.log('!!!');\r\n            firstDayOfWeek.current = firstDate.current.getDay() + 7;\r\n            refCellsAmount.current = firstDayOfWeek.current + 7 + lastDay.current - 1;\r\n        } else {\r\n            firstDayOfWeek.current = firstDate.current.getDay();\r\n            refCellsAmount.current = firstDayOfWeek.current + lastDay.current - 1;\r\n        }\r\n        changeBackgroundImage(month.current);\r\n        setCellsArr(createCellsArr());\r\n    }\r\n\r\n    function handleClickBack() {\r\n        now.current = (new Date (year.current, month.current - 1, date.current));\r\n        year.current = now.current.getFullYear();\r\n        month.current = now.current.getMonth();\r\n        date.current = now.current.getDate();\r\n        lastDate.current = (new Date(year.current, month.current + 1, 0));\r\n        firstDate.current = (new Date(year.current, month.current, 1));\r\n        lastDay.current = lastDate.current.getDate();\r\n        firstDayOfWeek.current = firstDate.current.getDay();\r\n        if(firstDayOfWeek.current === 0) {\r\n            firstDayOfWeek.current = firstDate.current.getDay() + 7;\r\n            refCellsAmount.current = firstDayOfWeek.current + 7 + lastDay.current - 1;\r\n        } else {\r\n            firstDayOfWeek.current = firstDate.current.getDay();\r\n            refCellsAmount.current = firstDayOfWeek.current + lastDay.current - 1;\r\n        }\r\n        changeBackgroundImage(month.current);\r\n        setCellsArr(createCellsArr());\r\n    }\r\n\r\n        const [eventId, setEventId] = useState('');\r\n        const [eventText, setEventText] = useState('');\r\n        const [visability, setVisability ] = useState(false);\r\n        const [arrValues, setArrValues] = useState([]);\r\n\r\n    function createArrValues() {\r\n        const copy = [...arrValues];\r\n        copy.push(inputValue);\r\n        setArrValues(copy);\r\n        setInputValue('');\r\n        // setCounterValues(counterValues + 1);\r\n        console.log(arrValues);\r\n    }\r\n\r\n    function handleClickCell(event) {\r\n         setEventId(event.target.id);\r\n         setEventText(event.target.textContent);\r\n         if(event.target.textContent !== '') {\r\n            setVisability(true);\r\n         }\r\n         if(localStorage.getItem(eventId) === true) {\r\n            const copy = [...arrValues];\r\n            const savedArr = JSON.parse(localStorage.getItem(eventId));\r\n            for(let elem of savedArr) {\r\n                copy.push(elem);\r\n            }\r\n            setArrValues(copy);\r\n         }\r\n         console.log(localStorage.getItem(eventId));\r\n    }\r\n\r\n    function handleClickSaveButton() {\r\n        setVisability(false);\r\n        if(arrValues.length >= 1) {\r\n            localStorage.setItem(eventId, JSON.stringify(arrValues));\r\n        }\r\n        const copyCellsArr = [...cellsArr];\r\n        for(let elem of copyCellsArr) {\r\n            if(elem.id === eventId) {\r\n                elem.hasTasks = true;\r\n                console.log(elem);\r\n            }\r\n        }\r\n        setCellsArr(copyCellsArr);\r\n\r\n        const copyArrValues = [...arrValues];\r\n        copyArrValues.length = 0;\r\n        setArrValues(copyArrValues);\r\n\r\n    }\r\n\r\n    return <div>\r\n        <CalendarPresent year = {year.current} month = {month.current} cellsArr = {cellsArr} handleClickForward = {handleClickForward} handleClickBack = {handleClickBack} monthObj = {monthObj} handleClickCell = {handleClickCell} />\r\n        <Checklist month={month.current + 1} year={year.current} eventId={eventId} eventText={eventText} visability={visability} arrValues={arrValues} setArrValues={setArrValues} handleClickSaveButton={handleClickSaveButton} createArrValues={createArrValues} />\r\n    </div>\r\n\r\n}\r\n\r\nexport default Calendar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}