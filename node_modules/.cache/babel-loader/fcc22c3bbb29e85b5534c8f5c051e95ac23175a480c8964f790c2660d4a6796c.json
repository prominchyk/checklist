{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\checklist\\\\src\\\\components\\\\Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport CalendarPresent from \"./CalendarPresent\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calendar() {\n  _s();\n  const [now, setNow] = useState(new Date());\n  const year = useRef(now.getFullYear());\n  const month = useRef(now.getMonth());\n  const date = useRef(now.getDate());\n  const lastDate = new Date(year.current, month.current + 1, 0);\n  const lastDay = lastDate.getDate();\n  const firstDate = new Date(year.current, month.current, 1);\n  const firstDayOfWeek = firstDate.getDay();\n  const refCellsAmount = useRef(firstDayOfWeek + lastDay);\n  const refCounterCells = useRef(1);\n  const refCounterDays = useRef(1);\n  function createCellsArr() {\n    while (refCellsAmount.current % 7 !== 0) {\n      refCellsAmount.current = refCellsAmount.current + 1;\n    }\n    const firstCellsArr = [];\n    for (let i = refCellsAmount.current; i >= 1; i--) {\n      firstCellsArr.push({\n        id: year.current.toString() + (month.current + 1) + date.current + refCounterCells.current,\n        value: refCounterCells.current >= firstDayOfWeek && refCounterCells.current < lastDay + firstDayOfWeek ? refCounterDays.current : null,\n        hasTasks: false,\n        allTasksDone: false,\n        isActive: false,\n        isToday: false\n      });\n      if (refCounterCells.current >= firstDayOfWeek && refCounterCells.current < lastDay + firstDayOfWeek) {\n        refCounterDays.current = refCounterDays.current + 1;\n      }\n      refCounterCells.current = refCounterCells.current + 1;\n    }\n    refCounterCells.current = 1;\n    refCounterDays.current = 1;\n    for (let elem of firstCellsArr) {\n      elem.value === date.current ? elem.isToday = true : elem.isToday = false;\n    }\n    //console.log(firstCellsArr);\n    return firstCellsArr;\n  }\n  const [cellsArr, setCellsArr] = useState(createCellsArr());\n  console.log(cellsArr);\n  function UpdateCellsArr() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [setCellsArr(createCellsArr()), \";\"]\n    }, void 0, true);\n  }\n  function handleClickForward() {\n    setNow(new Date(year.current, month.current + 1, date.current));\n    year.current = now.getFullYear();\n    month.current = now.getMonth();\n    date.current = now.getDate();\n    console.log(year.current, month.current, date.current);\n    /*#__PURE__*/_jsxDEV(UpdateCellsArr, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CalendarPresent, {\n      year: year.current,\n      month: month.current,\n      cellsArr: cellsArr,\n      handleClickForward: handleClickForward\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 12\n  }, this);\n}\n_s(Calendar, \"JAuY/8Bv4iZbiXm5ZUOUwmylk+A=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useRef","CalendarPresent","Fragment","_Fragment","jsxDEV","_jsxDEV","Calendar","_s","now","setNow","Date","year","getFullYear","month","getMonth","date","getDate","lastDate","current","lastDay","firstDate","firstDayOfWeek","getDay","refCellsAmount","refCounterCells","refCounterDays","createCellsArr","firstCellsArr","i","push","id","toString","value","hasTasks","allTasksDone","isActive","isToday","elem","cellsArr","setCellsArr","console","log","UpdateCellsArr","children","handleClickForward","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/projects/checklist/src/components/Calendar.js"],"sourcesContent":["import React, {useState, useRef} from \"react\";\r\nimport CalendarPresent from \"./CalendarPresent\";\r\n\r\nfunction Calendar() {\r\n    const [now, setNow] = useState(new Date());\r\n    const year = useRef(now.getFullYear());\r\n    const month = useRef(now.getMonth());\r\n    const date = useRef(now.getDate());\r\n\r\n    const lastDate = new Date(year.current, month.current + 1, 0);\r\n    const lastDay = lastDate.getDate();\r\n    const firstDate = new Date(year.current, month.current, 1);\r\n    const firstDayOfWeek = firstDate.getDay();\r\n    const refCellsAmount = useRef(firstDayOfWeek + lastDay);\r\n    const refCounterCells = useRef(1);\r\n    const refCounterDays = useRef(1);\r\n\r\n    function createCellsArr() {\r\n\r\n        while (refCellsAmount.current % 7 !== 0) {\r\n            refCellsAmount.current = refCellsAmount.current + 1;\r\n        }\r\n\r\n        const firstCellsArr = [];\r\n        for(let i = refCellsAmount.current; i >= 1; i--) {\r\n            firstCellsArr.push({\r\n            id: year.current.toString() + (month.current + 1) + date.current + refCounterCells.current,\r\n            value: refCounterCells.current >= firstDayOfWeek && refCounterCells.current < lastDay + firstDayOfWeek ? refCounterDays.current : null,\r\n            hasTasks: false,\r\n            allTasksDone: false,\r\n            isActive: false,\r\n                isToday: false,\r\n            })\r\n            if(refCounterCells.current >= firstDayOfWeek && refCounterCells.current < lastDay + firstDayOfWeek) {\r\n                refCounterDays.current = refCounterDays.current + 1;\r\n            }\r\n            refCounterCells.current = refCounterCells.current + 1;\r\n\r\n        }\r\n        refCounterCells.current = 1;\r\n        refCounterDays.current = 1;\r\n\r\n        for(let elem of firstCellsArr) {\r\n            elem.value === date.current ? elem.isToday = true : elem.isToday = false;\r\n        } \r\n        //console.log(firstCellsArr);\r\n        return firstCellsArr;\r\n        \r\n        }\r\n\r\n    const [cellsArr, setCellsArr] = useState(createCellsArr());\r\n    console.log(cellsArr);\r\n\r\n    function UpdateCellsArr() {\r\n        return <>\r\n        {setCellsArr(createCellsArr())};\r\n        </>\r\n    }\r\n\r\n    function handleClickForward() {\r\n        setNow (new Date (year.current, month.current + 1, date.current));\r\n        year.current = now.getFullYear();\r\n        month.current = now.getMonth();\r\n        date.current = now.getDate();\r\n        console.log(year.current, month.current, date.current);\r\n        <UpdateCellsArr />\r\n    }\r\n\r\n    return <div>\r\n        <CalendarPresent year = {year.current} month = {month.current} cellsArr = {cellsArr} handleClickForward = {handleClickForward} />\r\n    </div>\r\n\r\n}\r\n\r\nexport default Calendar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}