{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\checklist\\\\src\\\\components\\\\Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport CalendarPresent from \"./CalendarPresent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calendar() {\n  _s();\n  // const [now, setNow] = useState(new Date());\n  const now = useRef(new Date());\n  const year = useRef(now.current.getFullYear());\n  const month = useRef(now.current.getMonth());\n  const date = useRef(now.current.getDate());\n  const lastDate = new Date(year.current, month.current + 1, 0);\n  const lastDay = lastDate.getDate();\n  const firstDate = new Date(year.current, month.current, 1);\n  const firstDayOfWeek = firstDate.getDay();\n  const refCellsAmount = useRef(firstDayOfWeek + lastDay);\n  const refCounterCells = useRef(1);\n  const refCounterDays = useRef(1);\n  function createCellsArr() {\n    while (refCellsAmount.current % 7 !== 0) {\n      refCellsAmount.current = refCellsAmount.current + 1;\n    }\n    const firstCellsArr = [];\n    for (let i = refCellsAmount.current; i >= 1; i--) {\n      firstCellsArr.push({\n        id: year.current.toString() + (month.current + 1) + date.current + refCounterCells.current,\n        value: refCounterCells.current >= firstDayOfWeek && refCounterCells.current < lastDay + firstDayOfWeek ? refCounterDays.current : null,\n        hasTasks: false,\n        allTasksDone: false,\n        isActive: false,\n        isToday: false\n      });\n      if (refCounterCells.current >= firstDayOfWeek && refCounterCells.current < lastDay + firstDayOfWeek) {\n        refCounterDays.current = refCounterDays.current + 1;\n      }\n      refCounterCells.current = refCounterCells.current + 1;\n    }\n    refCounterCells.current = 1;\n    refCounterDays.current = 1;\n    for (let elem of firstCellsArr) {\n      elem.value === date.current ? elem.isToday = true : elem.isToday = false;\n    }\n    console.log(firstCellsArr);\n    return firstCellsArr;\n  }\n  const [cellsArr, setCellsArr] = useState(createCellsArr());\n  console.log(cellsArr);\n  function handleClickForward() {\n    //console.log(new Date (year, month + 1, date));\n    //setNow (new Date (year.current, month.current + 1, date.current));\n    now.current = new Date(year.current, month.current + 1, date.current);\n    //console.log(year, month, date);\n    year.current = now.current.getFullYear();\n    month.current = now.current.getMonth();\n    date.current = now.current.getDate();\n    console.log(year.current, month.current, date.current);\n    setCellsArr(createCellsArr());\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CalendarPresent, {\n      year: year.current,\n      month: month.current,\n      cellsArr: cellsArr,\n      handleClickForward: handleClickForward\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 12\n  }, this);\n}\n_s(Calendar, \"fQc/qL0hHgJ+MGOeAR2O2uQ8oPA=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useRef","CalendarPresent","jsxDEV","_jsxDEV","Calendar","_s","now","Date","year","current","getFullYear","month","getMonth","date","getDate","lastDate","lastDay","firstDate","firstDayOfWeek","getDay","refCellsAmount","refCounterCells","refCounterDays","createCellsArr","firstCellsArr","i","push","id","toString","value","hasTasks","allTasksDone","isActive","isToday","elem","console","log","cellsArr","setCellsArr","handleClickForward","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/projects/checklist/src/components/Calendar.js"],"sourcesContent":["import React, {useState, useRef} from \"react\";\r\nimport CalendarPresent from \"./CalendarPresent\";\r\n\r\nfunction Calendar() {\r\n   // const [now, setNow] = useState(new Date());\r\n    const now = useRef(new Date());\r\n    const year = useRef(now.current.getFullYear());\r\n    const month = useRef(now.current.getMonth());\r\n    const date = useRef(now.current.getDate());\r\n\r\n    const lastDate = new Date(year.current, month.current + 1, 0);\r\n    const lastDay = lastDate.getDate();\r\n    const firstDate = new Date(year.current, month.current, 1);\r\n    const firstDayOfWeek = firstDate.getDay();\r\n    const refCellsAmount = useRef(firstDayOfWeek + lastDay);\r\n    const refCounterCells = useRef(1);\r\n    const refCounterDays = useRef(1);\r\n\r\n    function createCellsArr() {\r\n\r\n        while (refCellsAmount.current % 7 !== 0) {\r\n            refCellsAmount.current = refCellsAmount.current + 1;\r\n        }\r\n\r\n        const firstCellsArr = [];\r\n        for(let i = refCellsAmount.current; i >= 1; i--) {\r\n            firstCellsArr.push({\r\n            id: year.current.toString() + (month.current + 1) + date.current + refCounterCells.current,\r\n            value: refCounterCells.current >= firstDayOfWeek && refCounterCells.current < lastDay + firstDayOfWeek ? refCounterDays.current : null,\r\n            hasTasks: false,\r\n            allTasksDone: false,\r\n            isActive: false,\r\n                isToday: false,\r\n            })\r\n            if(refCounterCells.current >= firstDayOfWeek && refCounterCells.current < lastDay + firstDayOfWeek) {\r\n                refCounterDays.current = refCounterDays.current + 1;\r\n            }\r\n            refCounterCells.current = refCounterCells.current + 1;\r\n\r\n        }\r\n        refCounterCells.current = 1;\r\n        refCounterDays.current = 1;\r\n\r\n        for(let elem of firstCellsArr) {\r\n            elem.value === date.current ? elem.isToday = true : elem.isToday = false;\r\n        } \r\n        console.log(firstCellsArr);\r\n        return firstCellsArr;\r\n        \r\n        }\r\n\r\n    const [cellsArr, setCellsArr] = useState(createCellsArr());\r\n    console.log(cellsArr);\r\n\r\n    function handleClickForward() {\r\n        //console.log(new Date (year, month + 1, date));\r\n        //setNow (new Date (year.current, month.current + 1, date.current));\r\n        now.current = (new Date (year.current, month.current + 1, date.current));\r\n        //console.log(year, month, date);\r\n        year.current = now.current.getFullYear();\r\n        month.current = now.current.getMonth();\r\n        date.current = now.current.getDate();\r\n        console.log(year.current, month.current, date.current);\r\n        setCellsArr(createCellsArr());\r\n    }\r\n\r\n    return <div>\r\n        <CalendarPresent year = {year.current} month = {month.current} cellsArr = {cellsArr} handleClickForward = {handleClickForward} />\r\n    </div>\r\n\r\n}\r\n\r\nexport default Calendar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}